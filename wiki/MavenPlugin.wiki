==Getting Started==

This functionality is easy to enable in a mavenized project. First you add the Carbon Five public plugin repository:

{{{
<pluginRepositories>
  <pluginRepository>
    <id>c5-public-repository</id>
    <url>http://mvn.carbonfive.com/public</url>
  </pluginRepository>
</pluginRepositories>
}}}

And then you configure the migration plugin:

{{{
<plugin>
  <groupId>com.carbonfive</groupId>
  <artifactId>maven-db-migration-plugin</artifactId>
  <version>RELEASE</version>
  <configuration>
    <url>jdbc:mysql://localhost/myapp_test</url>
    <username>dev</username>
    <password>dev</password>
  </configuration>
  <dependencies>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.6</version>
    </dependency>
  </dependencies>
</plugin>
}}}

We've hard-coded values for url, username, and password for the sake of example.  These would most likely be properties that can be overridden for numerous environments (dev, staging, production) via maven profiles.

The plugin doesn't have dependencies on any specific JDBC drivers, so you'll have to include the dependencies which include your specific driver.

Lastly, you drop in your migration scripts into the src/main/db/migrations directory, naming them using the pattern YYYYMMDDHHMMSS_description.sql, where YYYYMMDDHHMMSS is a fourteen digit timestamp. Some examples:

    * 20080115200312_create_users_table.sql
    * 20080518092345_add_default_users.sql
    * 20080718214051_add_lastvisit_column.sql
    * 20080802134142.sql

The description is optional and isn’t used for anything, it’s just there so that other developers can get an idea of what a script does without having to open it.

From the command line, you can run the migration plugin like this:

{{{
$ mvn migration:migrate
}}}

If you want the plugin to also create the database, you can invoke the plugin like this:

{{{
$ mvn migration:create migration:migrate
}}}

I’ve created a simple, complete sample that shows off this functionality, it’s located on the Carbon Five public subversion repository [http://svn.carbonfive.com/public/christian/migration-sample1/trunk here]. Check it out from subvserion and then read the readme.txt at the top of the project.

==Goal Reference==

The maven plugin has several goals:

|| *Goal* || *Description* ||
||db-migration:create||Create a new, empty database||
||db-migration:validate||Check to see if the database is up-to-date and report pending migrations||
||db-migration:migrate||Apply all pending migrations||
||db-migration:drop||Drop the database||
||db-migration:reset||Drop the existing database, create a new one, and apply all pending migrations||

==Configuration==

|| *Option* || *Description* || *Required* || *Default* ||
|| driver || JDBC driver class name (fully-qualified) || No || Autodetected from JDBC connection URL ||
|| url|| JDBC connection URL || Yes || Value set in default environment ||
|| username|| Database username || Yes || Value set in default environment ||
|| password|| Database password || Yes || Value set in default environment ||


The examples below will help make these configuration options more clear.

==Examples==

===Plugin Repository===

Before using the maven db migration plugin you'll need to add the following plugin repository:

{{{
<pluginRepositories>
  <pluginRepository>
    <id>c5-public-repository</id>
    <url>http://mvn.carbonfive.com/public</url>
  </pluginRepository>
...
</pluginRepositories>
}}}

===Simple Example===

A single environment using a MySQL database.

{{{
<plugin>
    <groupId>com.carbonfive</groupId>
    <artifactId>maven-migration-plugin</artifactId>
    <version>RELEASE</version>
    <configuration>
    </configuration>
    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.6</version>
        </dependency>
    </dependencies>
</plugin>
}}}

===Example===

Multiple environments, including a default, using a MySQL.

{{{
<plugin>
    <groupId>com.carbonfive</groupId>
    <artifactId>maven-migration-plugin</artifactId>
    <version>0.9-SNAPSHOT</version>
    <configuration>
        <defaultEnvironment>test</defaultEnvironment>
        <environments>
            <environment>
                <name>default</name>
                <!-- <driver>com.mysql.jdbc.Driver</driver> Autodetected -->
                <username>dev</username>
                <password>dev</password>
            </environment>
            <environment>
                <name>test</name>
                <url>jdbc:mysql://localhost/adventure_planner_test</url>
            </environment>
            <environment>
                <name>development</name>
                <url>jdbc:mysql://localhost/adventure_planner_development</url>
            </environment>
        </environments>
    </configuration>
    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.5</version>
        </dependency>
    </dependencies>
</plugin>
}}}